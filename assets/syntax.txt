_seps: "[](),.·⨯-→{}"

14 list = ["[" .w? .s?([.w? "," .w?] expr:"item") .w? "]"]
13 tup_items_expr = tup_items:"tup"
12 tup_items = [.s!([.w? "," .w?] expr:"item")]
11 tup_path_expr = tup_path:"tup"
10 tup_path = [.s!([.w? {"x" "⨯"} .w?] expr:"item") .w? {"->" "→"} .w? expr:"item"]
9 val = [?"\\" {"true":"bool" "false":!"bool" .$_:"num"}]
8 var = .._seps!:"var"
7 path_right = [.w? "[" .w? {tup_path_expr expr} .w? "]"]
6 app_right = [.w? "(" .w? {tup_items_expr expr} .w? ")"]
5 comp_right = [.w? {"." "·"} .w? expr]
4 constr_right = [.w? "{" .w? {tup_items_expr expr} .w? "}"]
3 seq = [{
  ["(" .w? tup_items_expr:"left" .w? ")"]
  var:"left"
} .r!({path_right:"path" app_right:"app" constr_right:"constr" comp_right:"comp"})]
2 if = ["if" .w? "(" .w? expr:"left" .w? "," .w? expr:"right" .w? ")"]
1 expr = {if:"if" seq:"seq" ["(" .w? tup_items_expr .w? ")"] list:"list" val var}
0 doc = [.w? expr:"expr" .w?]
